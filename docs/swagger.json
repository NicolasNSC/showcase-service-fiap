{
    "swagger": "2.0",
    "info": {
        "description": "Microservice for managing vehicle sales, listings, and payment webhooks.",
        "title": "Showcase Service FIAP",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8081",
    "basePath": "/",
    "paths": {
        "/listings": {
            "post": {
                "description": "Creates a new sale listing when notified by the catalog-service. This is an internal endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "summary": "Create a new sale listing",
                "parameters": [
                    {
                        "description": "Listing Data",
                        "name": "listing",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InputCreateListingDTO"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/dto.OutputCreateListingDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/listings/vehicle/{vehicle_id}": {
            "put": {
                "description": "Updates a sale listing's data when notified by the catalog-service. This is an internal endpoint.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Internal"
                ],
                "summary": "Update a sale listing",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vehicle ID",
                        "name": "vehicle_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Listing Data to Update",
                        "name": "listing",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InputUpdateListingDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Listing not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sales/available": {
            "get": {
                "description": "Get a list of all vehicles available for sale, sorted by price.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "List available vehicles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OutputSaleItemDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sales/sold": {
            "get": {
                "description": "Get a list of all vehicles that have been sold, sorted by price.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "List sold vehicles",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/dto.OutputSaleItemDTO"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sales/{id}/purchase": {
            "post": {
                "description": "Initiates the purchase process for a specific sale listing.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sales"
                ],
                "summary": "Purchase a vehicle",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sale ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Buyer's CPF",
                        "name": "purchase",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InputPurchaseDTO"
                        }
                    }
                ],
                "responses": {
                    "202": {
                        "description": "Accepted",
                        "schema": {
                            "$ref": "#/definitions/dto.OutputPurchaseDTO"
                        }
                    },
                    "400": {
                        "description": "Invalid request body or ID",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Sale not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "409": {
                        "description": "Sale is not available for purchase",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/webhooks/payments": {
            "post": {
                "description": "Receives payment status notifications from an external payment gateway.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Webhooks"
                ],
                "summary": "Handle a payment webhook",
                "parameters": [
                    {
                        "description": "Payment Notification Payload",
                        "name": "notification",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dto.InputWebhookDTO"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to process webhook",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dto.InputCreateListingDTO": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "vehicle_id": {
                    "type": "string"
                }
            }
        },
        "dto.InputPurchaseDTO": {
            "type": "object",
            "properties": {
                "buyer_cpf": {
                    "type": "string"
                }
            }
        },
        "dto.InputUpdateListingDTO": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                }
            }
        },
        "dto.InputWebhookDTO": {
            "type": "object",
            "properties": {
                "payment_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.OutputCreateListingDTO": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "sale_id": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "dto.OutputPurchaseDTO": {
            "type": "object",
            "properties": {
                "payment_id": {
                    "type": "string"
                }
            }
        },
        "dto.OutputSaleItemDTO": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "price": {
                    "type": "number"
                },
                "sale_id": {
                    "type": "string"
                },
                "vehicle_id": {
                    "type": "string"
                }
            }
        }
    }
}